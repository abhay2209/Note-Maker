{"ast":null,"code":"var _jsxFileName = \"/Users/abhayjolly/Note_maker/frontend/src/components/NoteDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, Modal, Button, Alert } from 'react-bootstrap';\nimport { getNotesAPI } from '../Services/services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modal_prop = {\n  minWidth: '40rem',\n  position: 'absolute',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  paddingBottom: '2rem',\n  left: '0',\n  right: '0',\n  zIndex: '2'\n};\nconst listPropertiesEnable = {\n  width: '30rem',\n  textAlign: 'left',\n  marginLeft: '5%',\n  paddingBottom: \"4rem\"\n};\nconst listPropertiesDisable = {\n  width: '30rem',\n  textAlign: 'left',\n  marginLeft: '5%',\n  paddingBottom: \"4rem\",\n  opacity: '0.8'\n};\nconst alertProperties = {\n  width: \"20rem\",\n  position: 'absolute',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  left: '0',\n  right: '0',\n  zIndex: '2'\n};\n\nfunction NoteDisplay(_ref) {\n  _s();\n\n  let {\n    getNoteList,\n    storedState\n  } = _ref;\n  const [notes, setNotes] = useState(storedState);\n  const [newState, setNewState] = useState(stateChange);\n  const [alertHidden, setAlertHidden] = useState(true);\n  const [modalHidden, setModalHidden] = useState(true); // Handle to show or not show modal\n\n  const [selNoteTitle, setNoteTitle] = useState(); // set title for the list element selected\n\n  const [selNote, setNote] = useState(); // set not info got list elelemnt selected\n\n  const [listState, setListHidden] = useState(false); // Toggle to show the list or not\n\n  const [listCss, setListCss] = useState(listPropertiesEnable);\n  useEffect(() => {\n    getNoteList();\n  }, [storedNotes]); // Show modal when list is clicked\n  // function showNote(note){\n  //     // Change modal info if different list element is clicked \n  //     var note_info = JSON.parse(localStorage.getItem(note))\n  //     setModalHidden(false);\n  //     setNoteTitle(note);\n  //     setNote(note_info);\n  //     setListHidden(true);\n  //     setListCss(listPropertiesDisable);\n  // }\n  // // Close the modal by changing hide state\n  // function handleClose(){\n  //     setListHidden(false);\n  //     setListCss(listPropertiesEnable);\n  //     setModalHidden(true);\n  // }\n  // // Delete note when delete button is clicked \n  // function deleteNote(){\n  //     localStorage.removeItem(selNoteTitle);\n  //     setAlertHidden(false);\n  //     window.setTimeout(() => setAlertHidden(true), 1000);\n  //     handleClose();\n  //     setListHidden(false);\n  //     setListCss(listPropertiesEnable);\n  //     setNotes(Object.keys(localStorage));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-inline\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"note-heading\",\n        children: \"Saved Notes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        style: listCss,\n        children: notes && notes.map(note => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          disabled: listState,\n          action: true,\n          children: note.title\n        }, note.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 13\n  }, this);\n}\n\n_s(NoteDisplay, \"vZznGuA51aDzIz2VY9iMSIYqpVA=\");\n\n_c = NoteDisplay;\nexport default NoteDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteDisplay\");","map":{"version":3,"names":["React","useState","useEffect","ListGroup","Modal","Button","Alert","getNotesAPI","modal_prop","minWidth","position","marginLeft","marginRight","paddingBottom","left","right","zIndex","listPropertiesEnable","width","textAlign","listPropertiesDisable","opacity","alertProperties","NoteDisplay","getNoteList","storedState","notes","setNotes","newState","setNewState","stateChange","alertHidden","setAlertHidden","modalHidden","setModalHidden","selNoteTitle","setNoteTitle","selNote","setNote","listState","setListHidden","listCss","setListCss","storedNotes","map","note","title"],"sources":["/Users/abhayjolly/Note_maker/frontend/src/components/NoteDisplay.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\nimport {ListGroup, Modal, Button, Alert} from 'react-bootstrap';\nimport { getNotesAPI } from '../Services/services';\n\nconst modal_prop = {\n    minWidth: '40rem',\n    position: 'absolute',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingBottom: '2rem',\n    left: '0',\n    right: '0',\n    zIndex: '2'\n}\n\nconst listPropertiesEnable = {\n    width: '30rem',\n    textAlign: 'left',\n    marginLeft: '5%',\n    paddingBottom: \"4rem\",\n}\n\nconst listPropertiesDisable = {\n    width: '30rem',\n    textAlign: 'left',\n    marginLeft: '5%',\n    paddingBottom: \"4rem\",\n    opacity: '0.8'\n}\n\nconst alertProperties = {\n    width: \"20rem\",\n    position: 'absolute',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    left: '0',\n    right: '0',\n    zIndex: '2'\n\n}\n\nfunction NoteDisplay({getNoteList, storedState}){\n\n    const [notes, setNotes] = useState(storedState);\n    const [newState, setNewState] = useState(stateChange)\n\n    const [alertHidden, setAlertHidden] = useState(true);\n\n    const [modalHidden, setModalHidden] = useState(true);      // Handle to show or not show modal\n    const [selNoteTitle, setNoteTitle] = useState();           // set title for the list element selected\n    const [selNote, setNote] = useState();                     // set not info got list elelemnt selected\n    const [listState, setListHidden] = useState(false);        // Toggle to show the list or not\n\n    const [listCss, setListCss]= useState(listPropertiesEnable)\n\n    useEffect(() => {\n        getNoteList()\n    }, [storedNotes])\n    \n    // Show modal when list is clicked\n    // function showNote(note){\n    //     // Change modal info if different list element is clicked \n    //     var note_info = JSON.parse(localStorage.getItem(note))\n\n    //     setModalHidden(false);\n\n    //     setNoteTitle(note);\n    //     setNote(note_info);\n\n    //     setListHidden(true);\n    //     setListCss(listPropertiesDisable);\n    // }\n\n    // // Close the modal by changing hide state\n    // function handleClose(){\n    //     setListHidden(false);\n    //     setListCss(listPropertiesEnable);\n\n    //     setModalHidden(true);\n    // }\n\n    // // Delete note when delete button is clicked \n    // function deleteNote(){\n    //     localStorage.removeItem(selNoteTitle);\n    //     setAlertHidden(false);\n    //     window.setTimeout(() => setAlertHidden(true), 1000);\n\n    //     handleClose();\n\n    //     setListHidden(false);\n    //     setListCss(listPropertiesEnable);\n\n    //     setNotes(Object.keys(localStorage));\n    // }\n\n    return (<div className='d-inline'>\n        {/* {!alertHidden ? \n        <Alert transition={true} variant=\"danger\" style={alertProperties}>\n            <Alert.Heading>Note Deleted Successfully</Alert.Heading>\n        </Alert>\n        :null}\n        {!modalHidden ? \n            <Modal.Dialog backdrop={'static'} className='align-middle modal-show' style={modal_prop}>\n                <Modal.Header closeButton onHide={handleClose} >\n                    <Modal.Title>{selNoteTitle}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <p class=\"note-text\">{selNote}</p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={deleteNote}>Delete Note</Button>\n                </Modal.Footer>\n            </Modal.Dialog>\n                : null} */}\n        <div>\n        <h3 className=\"note-heading\">Saved Notes:</h3>\n       \n        <ListGroup style={listCss}>\n                {notes && notes.map(note => \n                        <ListGroup.Item disabled = {listState} key={note.title} action>{note.title}</ListGroup.Item>\n                        \n                    )}\n        </ListGroup> \n        </div>\n\n        </div>\n    )\n}\n\n\nexport default NoteDisplay;"],"mappings":"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"},"metadata":{},"sourceType":"module"}