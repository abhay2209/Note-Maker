{"ast":null,"code":"var _jsxFileName = \"/Users/abhayjolly/Note_maker/frontend/src/components/NoteDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ListGroup, Modal, Button, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modal_prop = {\n  minWidth: '40rem',\n  position: 'absolute',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  paddingBottom: '2rem',\n  left: '0',\n  right: '0',\n  zIndex: '2'\n};\nconst listPropertiesEnable = {\n  width: '30rem',\n  textAlign: 'left',\n  marginLeft: '5%',\n  paddingBottom: \"4rem\"\n};\nconst listPropertiesDisable = {\n  width: '30rem',\n  textAlign: 'left',\n  marginLeft: '5%',\n  paddingBottom: \"4rem\",\n  opacity: '0.8'\n};\nconst alertProperties = {\n  width: \"20rem\",\n  position: 'absolute',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  left: '0',\n  right: '0',\n  zIndex: '2'\n};\n\nconst NoteDisplay = (getNoteList, storedNotes) => {\n  _s();\n\n  const [notes, setNotes] = useState(storedNotes);\n  const [alertHidden, setAlertHidden] = useState(true);\n  const [modalHidden, setModalHidden] = useState(true); // Handle to show or not show modal\n\n  const [selNoteTitle, setNoteTitle] = useState(); // set title for the list element selected\n\n  const [selNote, setNote] = useState(); // set not info got list elelemnt selected\n\n  const [listState, setListHidden] = useState(false); // Toggle to show the list or not\n\n  const [listCss, setListCss] = useState(listPropertiesEnable); // Show modal when list is clicked\n\n  function showNote(note) {\n    // Change modal info if different list element is clicked \n    var note_info = JSON.parse(localStorage.getItem(note));\n    setModalHidden(false);\n    setNoteTitle(note);\n    setNote(note_info);\n    setListHidden(true);\n    setListCss(listPropertiesDisable);\n  } // Close the modal by changing hide state\n\n\n  function handleClose() {\n    setListHidden(false);\n    setListCss(listPropertiesEnable);\n    setModalHidden(true);\n  } // Delete note when delete button is clicked \n\n\n  function deleteNote() {\n    localStorage.removeItem(selNoteTitle);\n    setAlertHidden(false);\n    window.setTimeout(() => setAlertHidden(true), 1000);\n    handleClose();\n    setListHidden(false);\n    setListCss(listPropertiesEnable);\n    setNotes(Object.keys(localStorage));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-inline\",\n    children: [!alertHidden ? /*#__PURE__*/_jsxDEV(Alert, {\n      transition: true,\n      variant: \"danger\",\n      style: alertProperties,\n      children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n        children: \"Note Deleted Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : null, !modalHidden ? /*#__PURE__*/_jsxDEV(Modal.Dialog, {\n      backdrop: 'static',\n      className: \"align-middle modal-show\",\n      style: modal_prop,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        onHide: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: selNoteTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"note-text\",\n          children: selNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: deleteNote,\n          children: \"Delete Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"note-heading\",\n        children: \"Saved Notes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        style: listCss,\n        children: notes && notes.map(note => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          disabled: listState,\n          action: true,\n          onClick: () => showNote(note),\n          children: note\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 13\n  }, this);\n};\n\n_s(NoteDisplay, \"jsWBzVMSlu6fG6GrlOjca+keKBk=\");\n\n_c = NoteDisplay;\nexport default NoteDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteDisplay\");","map":{"version":3,"names":["React","useState","ListGroup","Modal","Button","Alert","modal_prop","minWidth","position","marginLeft","marginRight","paddingBottom","left","right","zIndex","listPropertiesEnable","width","textAlign","listPropertiesDisable","opacity","alertProperties","NoteDisplay","getNoteList","storedNotes","notes","setNotes","alertHidden","setAlertHidden","modalHidden","setModalHidden","selNoteTitle","setNoteTitle","selNote","setNote","listState","setListHidden","listCss","setListCss","showNote","note","note_info","JSON","parse","localStorage","getItem","handleClose","deleteNote","removeItem","window","setTimeout","Object","keys","map"],"sources":["/Users/abhayjolly/Note_maker/frontend/src/components/NoteDisplay.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {ListGroup, Modal, Button, Alert} from 'react-bootstrap';\n\nconst modal_prop = {\n    minWidth: '40rem',\n    position: 'absolute',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingBottom: '2rem',\n    left: '0',\n    right: '0',\n    zIndex: '2'\n}\n\nconst listPropertiesEnable = {\n    width: '30rem',\n    textAlign: 'left',\n    marginLeft: '5%',\n    paddingBottom: \"4rem\",\n}\n\nconst listPropertiesDisable = {\n    width: '30rem',\n    textAlign: 'left',\n    marginLeft: '5%',\n    paddingBottom: \"4rem\",\n    opacity: '0.8'\n}\n\nconst alertProperties = {\n    width: \"20rem\",\n    position: 'absolute',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    left: '0',\n    right: '0',\n    zIndex: '2'\n\n}\n\nconst NoteDisplay = (getNoteList, storedNotes) => {\n\n    const [notes, setNotes] = useState(storedNotes);\n\n    const [alertHidden, setAlertHidden] = useState(true);\n\n    const [modalHidden, setModalHidden] = useState(true);      // Handle to show or not show modal\n    const [selNoteTitle, setNoteTitle] = useState();           // set title for the list element selected\n    const [selNote, setNote] = useState();                     // set not info got list elelemnt selected\n    const [listState, setListHidden] = useState(false);        // Toggle to show the list or not\n\n    const [listCss, setListCss]= useState(listPropertiesEnable)\n\n    // Show modal when list is clicked\n    function showNote(note){\n        // Change modal info if different list element is clicked \n        var note_info = JSON.parse(localStorage.getItem(note))\n\n        setModalHidden(false);\n\n        setNoteTitle(note);\n        setNote(note_info);\n\n        setListHidden(true);\n        setListCss(listPropertiesDisable);\n    }\n\n    // Close the modal by changing hide state\n    function handleClose(){\n        setListHidden(false);\n        setListCss(listPropertiesEnable);\n\n        setModalHidden(true);\n    }\n\n    // Delete note when delete button is clicked \n    function deleteNote(){\n        localStorage.removeItem(selNoteTitle);\n        setAlertHidden(false);\n        window.setTimeout(() => setAlertHidden(true), 1000);\n\n        handleClose();\n\n        setListHidden(false);\n        setListCss(listPropertiesEnable);\n\n        setNotes(Object.keys(localStorage));\n    }\n\n    return (<div className='d-inline'>\n        {!alertHidden ? \n        <Alert transition={true} variant=\"danger\" style={alertProperties}>\n            <Alert.Heading>Note Deleted Successfully</Alert.Heading>\n        </Alert>\n        :null}\n        {!modalHidden ? \n            <Modal.Dialog backdrop={'static'} className='align-middle modal-show' style={modal_prop}>\n                <Modal.Header closeButton onHide={handleClose} >\n                    <Modal.Title>{selNoteTitle}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <p class=\"note-text\">{selNote}</p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={deleteNote}>Delete Note</Button>\n                </Modal.Footer>\n            </Modal.Dialog>\n                : null}\n        <div>\n        <h3 className=\"note-heading\">Saved Notes:</h3>\n        <ListGroup  style={listCss}>\n                {notes && notes.map(note =>\n                        <ListGroup.Item disabled = {listState} key={note} action onClick={() => showNote(note)}>{note}</ListGroup.Item>\n                    )}\n        </ListGroup> \n        </div>\n\n        </div>\n    )\n}\n\n\nexport default NoteDisplay;"],"mappings":"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"},"metadata":{},"sourceType":"module"}