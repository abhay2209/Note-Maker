{"ast":null,"code":"var _jsxFileName = \"/Users/abhayjolly/Note_maker/frontend/src/components/NoteDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, Modal, Button, Alert, Table } from 'react-bootstrap';\nimport { deleteNotesAPI, getNotesAPI } from '../Services/services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modal_prop = {\n  minWidth: '40rem',\n  position: 'absolute',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  paddingBottom: '2rem',\n  left: '0',\n  right: '0',\n  zIndex: '2'\n};\nconst listProperties = {\n  width: '30rem',\n  textAlign: 'left',\n  marginLeft: '5%',\n  paddingBottom: \"4rem\"\n};\nconst listPropertiesDisable = {\n  width: '30rem',\n  textAlign: 'left',\n  marginLeft: '5%',\n  paddingBottom: \"4rem\",\n  opacity: '0.8'\n};\nconst alertProperties = {\n  width: \"20rem\",\n  position: 'absolute',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  left: '0',\n  right: '0',\n  zIndex: '2'\n};\nconst tableProperties = {\n  width: \"40rem\",\n  backgroundColor: \"white\",\n  marginLeft: '5%'\n};\n\nfunction NoteDisplay() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [alertHidden, setAlertHidden] = useState(true);\n  const [modalHidden, setModalHidden] = useState(true); // Handle to show or not show modal\n\n  const [selNoteTitle, setNoteTitle] = useState(); // set title for the list element selected\n\n  const [selNote, setNote] = useState(); // set not info got list elelemnt selected\n\n  const getNoteList = async () => {\n    getNotesAPI().then(response => {\n      response.json().then(response => {\n        if (response.isSuccess) {\n          setNotes(response.res); // console.log(\"The budget logs are\" + response.res)\n        } else {\n          console.log(\"Error in getting Budget Categoroes\" + response.error);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getNoteList();\n  }, []); // Show modal when list is clicked\n\n  function showNote(note) {\n    // Change modal info if different list element is clicked \n    // var note_info = JSON.parse(localStorage.getItem(note))\n    setModalHidden(false);\n    setNoteTitle(note.title);\n    setNote(note.notebody);\n  } // // Close the modal by changing hide state\n\n\n  function handleClose() {\n    setModalHidden(true);\n  } // // Delete note when delete button is clicked \n\n\n  function deleteNote() {\n    deleteNotesAPI(selNoteTitle).then(response => {\n      response.json().then(response => {\n        if (response.isSuccess) {\n          setAlertHidden(false);\n          window.setTimeout(() => setAlertHidden(true), 1000);\n          handleClose();\n          getNoteList();\n        } else {\n          console.log(\"Failed with error\" + response.error);\n        }\n      });\n    });\n  }\n\n  function handleEdit() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-inline\",\n    children: [!alertHidden ? /*#__PURE__*/_jsxDEV(Alert, {\n      transition: true,\n      variant: \"danger\",\n      style: alertProperties,\n      children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n        children: \"Note Deleted Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Modal, {\n      show: !modalHidden,\n      children: /*#__PURE__*/_jsxDEV(Modal.Dialog, {\n        backdrop: 'static',\n        className: \"align-middle modal-show\",\n        style: modal_prop,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          onHide: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: selNoteTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"note-text\",\n            children: selNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleEdit,\n            children: \"Edit Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: deleteNote,\n            children: \"Delete Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"note-heading\",\n        children: \"Saved Notes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        style: listProperties,\n        children: notes && notes.map(note => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          action: true,\n          onClick: () => showNote(note),\n          children: note.title\n        }, note.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 13\n  }, this);\n}\n\n_s(NoteDisplay, \"mZVeaLKhsLBCk40w1msAuwxfE8M=\");\n\n_c = NoteDisplay;\nexport default NoteDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteDisplay\");","map":{"version":3,"names":["React","useState","useEffect","ListGroup","Modal","Button","Alert","Table","deleteNotesAPI","getNotesAPI","modal_prop","minWidth","position","marginLeft","marginRight","paddingBottom","left","right","zIndex","listProperties","width","textAlign","listPropertiesDisable","opacity","alertProperties","tableProperties","backgroundColor","NoteDisplay","notes","setNotes","alertHidden","setAlertHidden","modalHidden","setModalHidden","selNoteTitle","setNoteTitle","selNote","setNote","getNoteList","then","response","json","isSuccess","res","console","log","error","showNote","note","title","notebody","handleClose","deleteNote","window","setTimeout","handleEdit","map"],"sources":["/Users/abhayjolly/Note_maker/frontend/src/components/NoteDisplay.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\nimport {ListGroup, Modal, Button, Alert, Table} from 'react-bootstrap';\nimport { deleteNotesAPI, getNotesAPI } from '../Services/services';\n\nconst modal_prop = {\n    minWidth: '40rem',\n    position: 'absolute',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingBottom: '2rem',\n    left: '0',\n    right: '0',\n    zIndex: '2'\n}\n\nconst listProperties = {\n    width: '30rem',\n    textAlign: 'left',\n    marginLeft: '5%',\n    paddingBottom: \"4rem\",\n}\n\nconst listPropertiesDisable = {\n    width: '30rem',\n    textAlign: 'left',\n    marginLeft: '5%',\n    paddingBottom: \"4rem\",\n    opacity: '0.8'\n}\n\nconst alertProperties = {\n    width: \"20rem\",\n    position: 'absolute',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    left: '0',\n    right: '0',\n    zIndex: '2'\n\n}\n\nconst tableProperties ={\n    width: \"40rem\",\n    backgroundColor: \"white\",\n    marginLeft: '5%',\n    \n}\n\nfunction NoteDisplay(){\n\n    const [notes, setNotes] = useState([]);\n\n    const [alertHidden, setAlertHidden] = useState(true);\n\n    const [modalHidden, setModalHidden] = useState(true);      // Handle to show or not show modal\n    const [selNoteTitle, setNoteTitle] = useState();           // set title for the list element selected\n    const [selNote, setNote] = useState();                     // set not info got list elelemnt selected\n\n\n    const getNoteList = async () => {\n        getNotesAPI().then((response) => {response.json().then((response) => {\n            if (response.isSuccess) {\n                setNotes(response.res)\n                // console.log(\"The budget logs are\" + response.res)\n            }\n            else{ \n                console.log(\"Error in getting Budget Categoroes\" + response.error)\n            }\n        })\n    })\n    }\n\n    useEffect(() => {\n        getNoteList()\n    }, [])\n    \n    // Show modal when list is clicked\n    function showNote(note){\n        // Change modal info if different list element is clicked \n        // var note_info = JSON.parse(localStorage.getItem(note))\n\n        setModalHidden(false);\n\n        setNoteTitle(note.title);\n        setNote(note.notebody);\n    }\n\n    // // Close the modal by changing hide state\n    function handleClose(){\n\n        setModalHidden(true);\n    }\n\n    \n\n    // // Delete note when delete button is clicked \n    function deleteNote(){\n        deleteNotesAPI(selNoteTitle).then((response) => {\n            response.json().then((response) => {\n                if (response.isSuccess) {\n                    setAlertHidden(false);\n                    window.setTimeout(() => setAlertHidden(true), 1000);\n\n                    handleClose();\n\n                    getNoteList();\n                    \n                }\n                else{\n                    console.log(\"Failed with error\" + response.error)\n                }\n            })\n        })\n        \n    }\n\n    function handleEdit(){\n        \n    }\n\n    return (<div className='d-inline'>\n        {!alertHidden ? \n        <Alert transition={true} variant=\"danger\" style={alertProperties}>\n            <Alert.Heading>Note Deleted Successfully</Alert.Heading>\n        </Alert>\n        :null}\n        \n            <Modal show={!modalHidden}>\n            <Modal.Dialog backdrop={'static'} className='align-middle modal-show' style={modal_prop}>\n                <Modal.Header closeButton onHide={handleClose} >\n                    <Modal.Title>{selNoteTitle}</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <p className=\"note-text\">{selNote}</p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleEdit}>Edit Note</Button>\n                    <Button variant=\"danger\" onClick={deleteNote}>Delete Note</Button>\n                </Modal.Footer>\n\n            </Modal.Dialog>\n            </Modal>\n                 \n\n        <div>\n        <h3 className=\"note-heading\">Saved Notes:</h3>\n       \n        <ListGroup style={listProperties}>\n                {notes && notes.map(note => \n                        <ListGroup.Item  key={note.title} action onClick={()=>showNote(note)}>{note.title}</ListGroup.Item>\n                        \n                    )}\n        </ListGroup> \n\n{/* \n        <Table style={tableProperties} striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                    <th>Note Title</th>\n                    <th>Actions</th>\n                    </tr>\n                </thead>\n            \n                    <tbody>\n                 {notes && notes.map(note => \n                        \n                        <tr key={note.title}><th  key={note.title} onClick={()=>showNote(note)}>{note.title}</th>\n                        <th><Button key={note.title} onClick={()=>{handleEdit(note)}}>Edit</Button> <Button onClick={(e)=>{console.log(e.target.value)}}>Delete</Button></th></tr>\n                        \n                    )}\n                    </tbody>\n        </Table> */}\n        </div>\n\n        </div>\n    )\n}\n\n\nexport default NoteDisplay;"],"mappings":"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"},"metadata":{},"sourceType":"module"}